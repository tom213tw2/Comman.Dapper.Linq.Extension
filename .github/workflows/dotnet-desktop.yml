name: Publish .NET packages

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies for MySql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MySql
      run: dotnet restore

    - name: Restore dependencies for MSSql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MSSql
      run: dotnet restore

    - name: Build MySql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MySql
      run: dotnet build --configuration Release --no-restore

    - name: Build MSSql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MSSql
      run: dotnet build --configuration Release --no-restore

    - name: Pack MySql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MySql
      run: dotnet pack --configuration Release --no-build --output ./nupkgs

    - name: Pack MSSql
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MSSql
      run: dotnet pack --configuration Release --no-build --output ./nupkgs

    - name: Get MySql package version
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MySql
      run: |
        PACKAGE_VERSION=$(grep -oP '(?<=<Version>)[^<]+' Comman.Dapper.Linq.MySql.csproj)
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

    - name: Get MSSql package version
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MSSql
      run: |
        PACKAGE_VERSION=$(grep -oP '(?<=<Version>)[^<]+' Comman.Dapper.Linq.MSSql.csproj)
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

    - name: Configure NuGet source
      run: dotnet nuget add source https://nuget.godrinkshop.com/v3/index.json -n baget

    - name: Push MySql to NuGet server
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MySql
      run: dotnet nuget push ./nupkgs/*.nupkg --source https://nuget.godrinkshop.com/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

    - name: Push MSSql to NuGet server
      working-directory: Comman.Dapper.Linq.Extension/Comman.Dapper.Linq.MSSql
      run: dotnet nuget push ./nupkgs/*.nupkg --source https://nuget.godrinkshop.com/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

    - name: Send Success Webhook
      if: success()
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "repository": "'"${{ github.repository }}"'",
          "commit_message": "'"${{ github.event.head_commit.message }}"'",
          "trigger_actor": "'"${{ github.actor }}"'",
          "package_version": "'"${{ env.PACKAGE_VERSION }}"'",
          "status": "success"
        }' https://n8n.godrinkshop.com/webhook/3660e34d-ad9d-4239-806e-8c8e93551a36
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_EVENT_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        GITHUB_ACTOR: ${{ github.actor }}
        PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}

    - name: Send Error Webhook
      if: failure()
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "repository": "'"${{ github.repository }}"'",
          "commit_message": "'"${{ github.event.head_commit.message }}"'",
          "trigger_actor": "'"${{ github.actor }}"'",
          "status": "failed",
          "errors": "'"${{ env.ERRORS }}"'"
        }' https://n8n.godrinkshop.com/webhook/3660e34d-ad9d-4239-806e-8c8e93551a36
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_EVENT_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        GITHUB_ACTOR: ${{ github.actor }}
        ERRORS: ${{ env.ERRORS }}
